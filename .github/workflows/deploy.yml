name: Deploy via Azure RunCommand
on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy on VM (as user)
        uses: azure/cli@v2
        with:
          inlineScript: |
            az vm run-command invoke \
              --resource-group "${{ secrets.AZ_RG }}" \
              --name "${{ secrets.AZ_VM }}" \
              --command-id RunShellScript \
              --scripts '
                set -eu

                # base deps
                sudo apt-get update -y
                sudo apt-get install -y curl ca-certificates gnupg git build-essential

                # Node + npm + pm2 + corepack
                if ! command -v node >/dev/null 2>&1; then
                  curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash -
                  sudo apt-get install -y nodejs
                fi
                sudo npm i -g pm2 corepack

                # run as app user
                sudo -iu aum-sitrai bash -lc "
                  set -eux

                  APP_DIR=\$HOME/aum-ai
                  REPO_AUTH=https://token:${{ secrets.GH_PAT }}@github.com/sumanrajsah/aum-ai.git
                  mkdir -p \$APP_DIR
                  cd \$APP_DIR

                  if [ ! -d .git ]; then
                    git clone --depth=1 \$REPO_AUTH .
                  else
                    git remote set-url origin \$REPO_AUTH
                    git fetch --prune origin
                    git reset --hard origin/main
                  fi

                  # write env without echoing secrets to stdout
                  umask 077
                  cat > .env.production <<EOF
                  NEXT_PUBLIC_API_URI=${{ secrets.NEXT_PUBLIC_API_URI }}
                  NEXT_PUBLIC_GOOGLE_CLIENT_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }}
                  EOF

                  # Yarn (Berry) and install
                  corepack enable
                  corepack prepare yarn@stable --activate
                  yarn -v
                  yarn install --immutable
                  yarn build

                  # run with PM2
                  if pm2 describe aum-ai >/dev/null 2>&1; then
                    pm2 reload aum-ai
                  else
                    pm2 start \"yarn start\" --name aum-ai
                  fi
                  pm2 save
                "
              '
