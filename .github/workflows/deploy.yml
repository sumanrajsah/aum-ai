name: Deploy via Azure RunCommand
on: { push: { branches: [ main ] } }

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy on VM (as user)
        uses: azure/cli@v2
        with:
          inlineScript: |
            az vm run-command invoke \
              --resource-group "${{ secrets.AZ_RG }}" \
              --name "${{ secrets.AZ_VM }}" \
              --command-id RunShellScript \
              --scripts '
                #!/bin/sh
                set -eu

                # system deps
                if ! command -v node >/dev/null 2>&1; then
                  curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash -
                  sudo apt -y install nodejs build-essential git
                fi
                sudo npm i -g pm2 corepack

                # run as login shell for user so PATH includes /usr/local/bin
                sudo -iu aum-sitrai bash -lc "
                  set -eux
                  echo :: whoami && whoami
                  echo :: PATH && echo \$PATH
                  echo :: versions && node -v || true; npm -v || true

                  APP_DIR=\$HOME/aum-ai
                  REPO_AUTH=https://token:${{ secrets.GH_PAT }}@github.com/sumanrajsah/aum-ai.git
                  mkdir -p \$APP_DIR
                  cd \$APP_DIR

                  if [ ! -d .git ]; then
                    git clone \$REPO_AUTH .
                  else
                    git remote set-url origin \$REPO_AUTH
                    git fetch --all
                    git reset --hard origin/main
                  fi

                  {
                    echo \"NEXT_PUBLIC_API_URI=${{ secrets.NEXT_PUBLIC_API_URI }}\"
                    echo \"NEXT_PUBLIC_GOOGLE_CLIENT_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }}\"
                  } > .env.production

                  # ensure yarn available for this user
                  corepack enable
                  corepack prepare yarn@stable --activate
                  yarn -v

                  yarn install --frozen-lockfile
                  yarn build

                  pm2 describe aum-ai >/dev/null 2>&1 && pm2 reload aum-ai || pm2 start node_modules/next/dist/bin/next --name aum-ai -- start
                  pm2 save
                " 2>&1 | tee -a /home/aum-sitrai/deploy.log
              '
